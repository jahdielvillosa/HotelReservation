
package hotelreserve;

import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static java.lang.Integer.parseInt;

public class preferenceFrame extends javax.swing.JFrame {
    private String myPrefRoom;
    private static String startMonth,startDay,startYear;
    private String endMonth,endDay,endYear;
    private int xMouse, yMouse;
    private Hotel database = new Hotel();
    
    public preferenceFrame() throws FileNotFoundException{
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        sidePicLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bedTypeComboBox = new javax.swing.JComboBox();
        bedTypeLabel = new javax.swing.JLabel();
        priceRoomLabel = new javax.swing.JLabel();
        dateReserveLabel = new javax.swing.JLabel();
        startLabel = new javax.swing.JLabel();
        endLabel = new javax.swing.JLabel();
        startmonthComboBox = new javax.swing.JComboBox();
        startdayComboBox = new javax.swing.JComboBox();
        startYearComboBox = new javax.swing.JComboBox();
        endMonthComboBox = new javax.swing.JComboBox();
        endDayComboBox = new javax.swing.JComboBox();
        endYearComboBox = new javax.swing.JComboBox();
        searchButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        priceRoomLabel2 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        logoMini = new javax.swing.JLabel();
        pogressLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(200, 100));
        setUndecorated(true);
        setOpacity(0.0F);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(65, 64, 75));

        sidePicLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        sidePicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/reception3.jpg"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        bedTypeComboBox.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 14)); // NOI18N
        bedTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Single", "Twin", "Triple", "King", "Suite" }));
        bedTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedTypeComboBoxActionPerformed(evt);
            }
        });

        bedTypeLabel.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 18)); // NOI18N
        bedTypeLabel.setForeground(new java.awt.Color(51, 51, 51));
        bedTypeLabel.setText("Bedroom Type: ");

        priceRoomLabel.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 18)); // NOI18N
        priceRoomLabel.setForeground(new java.awt.Color(51, 51, 51));
        priceRoomLabel.setText("Price of Room per Day: ");

        dateReserveLabel.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 20)); // NOI18N
        dateReserveLabel.setForeground(new java.awt.Color(51, 51, 51));
        dateReserveLabel.setText("Date of Reservation: ");

        startLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        startLabel.setForeground(new java.awt.Color(102, 102, 102));
        startLabel.setText("start: ");

        endLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        endLabel.setForeground(new java.awt.Color(102, 102, 102));
        endLabel.setText("end: ");

        startmonthComboBox.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 12)); // NOI18N
        startmonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        startmonthComboBox.setToolTipText("");
        startmonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startmonthComboBoxActionPerformed(evt);
            }
        });

        startdayComboBox.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 12)); // NOI18N
        startdayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30" }));

        startYearComboBox.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 12)); // NOI18N
        startYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Year", "2015", "2016", "2017" }));
        startYearComboBox.setBorder(null);

        endMonthComboBox.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 12)); // NOI18N
        endMonthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        endMonthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endMonthComboBoxActionPerformed(evt);
            }
        });

        endDayComboBox.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 12)); // NOI18N
        endDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30" }));

        endYearComboBox.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 12)); // NOI18N
        endYearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Year", "2015", "2016", "2017" }));
        endYearComboBox.setBorder(null);

        searchButton.setBackground(new java.awt.Color(0, 102, 102));
        searchButton.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 15)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setText("Search");
        searchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButton.setOpaque(false);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Select your desired room to be reserved:");

        userLabel.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 14)); // NOI18N
        userLabel.setForeground(new java.awt.Color(51, 51, 51));
        userLabel.setText("Hello");

        priceLabel.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 18)); // NOI18N
        priceLabel.setForeground(new java.awt.Color(51, 51, 51));
        priceLabel.setText("450");

        priceRoomLabel2.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 18)); // NOI18N
        priceRoomLabel2.setForeground(new java.awt.Color(51, 51, 51));
        priceRoomLabel2.setText("php");

        backButton.setBackground(new java.awt.Color(204, 51, 0));
        backButton.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 15)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Cancel");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(priceRoomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(priceLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(priceRoomLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bedTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bedTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dateReserveLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(12, 12, 12)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userLabel)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(endLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(endMonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(startLabel)
                                .addGap(18, 18, 18)
                                .addComponent(startmonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(startdayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(startYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(endDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(endYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(userLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bedTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bedTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceRoomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceLabel)
                    .addComponent(priceRoomLabel2))
                .addGap(18, 18, 18)
                .addComponent(dateReserveLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startdayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startmonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startLabel)
                    .addComponent(startYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endMonthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endLabel)
                    .addComponent(endDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(backButton))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(sidePicLabel)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sidePicLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(65, 64, 75));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        logoMini.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/midtown2mini.png"))); // NOI18N

        pogressLabel.setFont(new java.awt.Font("Trajan Pro", 0, 16)); // NOI18N
        pogressLabel.setForeground(new java.awt.Color(255, 255, 255));
        pogressLabel.setText("LOGIN > PREFERENCE");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(logoMini)
                .addGap(18, 18, 18)
                .addComponent(pogressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(logoMini)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(pogressLabel)
                        .addGap(27, 27, 27))))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("MIDTOWN HOTEL ONLINE RESERVATION SYSTEM © 2015 ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //fading effect
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        System.out.println("\nPreference Frame: ");
        userLabel.setText("Hello " +database.getGuestName() );
        for(double i=0.0;i<1.0;i=i+0.1){
            String val = i+"F";
            float f = Float.valueOf(val);
            this.setOpacity(f);
            try{
                Thread.sleep(20);
            }catch(Exception e){
            
            }
        }
    }//GEN-LAST:event_formWindowOpened
    
    /**
     * when search button is clicked,  first check if the reservation dates
     * are valid and acceptable. if true, set and store the preferred room and dates of
     * reservation to the hotel class.
     */
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed

        SearchResultFrame result = null;
        result = new SearchResultFrame();
        boolean isNotInThePast = false;
        boolean isDateValid = false;
        
        myPrefRoom = (String)bedTypeComboBox.getSelectedItem();
        System.out.println("Pref Room: " +myPrefRoom);
        
        isDateValid = checkReservationDate();        
        isNotInThePast = database.checkReservationDateFromToday(startMonth, startDay, startYear);
        
        if(isDateValid){
            if(isNotInThePast){
                result.displayFrame();
                // saves the preferred data
                database.setPrefRoom(myPrefRoom); 
                //display in console and opens the next window
                database.setPrefStartDate(startMonth, startDay, startYear);
                database.setPrefEndDate(endMonth, endDay, endYear);
                this.setVisible(false);
            }else{
                JOptionPane.showMessageDialog(jPanel1, "Reservation date must not today or in the past.");
                System.out.println("Reservation date must not today or in the past.\n");
            }
        }else{
            System.out.println("Invalid reservation date\n");
        }
        
        
    }//GEN-LAST:event_searchButtonActionPerformed
    
    /**
     * This will add days and remove days on 
     * based selected on start month
     */
    private void startmonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startmonthComboBoxActionPerformed
        // TODO add your handling code here:
        
        switch((String)startmonthComboBox.getSelectedItem()){
            
        //Add day
        case "January":   case "March": 
        case "May":       case "July":   
        case "August": case "November":
            
             if(startdayComboBox.getItemCount() == 29){
                System.out.println("dayCount: " +startdayComboBox.getItemCount());
                startdayComboBox.addItem("29");
                //do nothing
            }
            if(startdayComboBox.getItemCount() == 30){
                System.out.println("dayCount: " +startdayComboBox.getItemCount());
                startdayComboBox.addItem("30");
                //do nothing
            }
            if(startdayComboBox.getItemCount() == 31){
                System.out.println("dayCount: " +startdayComboBox.getItemCount());
                startdayComboBox.addItem("31");
                //do nothing
            }
            break;
        //Remove days;    
        case "February":
            if(startdayComboBox.getItemCount() == 32){
                startdayComboBox.removeItemAt(31);
            }
            if(startdayComboBox.getItemCount() == 31){
                startdayComboBox.removeItemAt(30);
            }

            break;
            
        //Remove day 31
        case "April":   case "June":
        case "September":  case "October":
        case "December":
            if(startdayComboBox.getItemCount() == 32){
               startdayComboBox.removeItem("31");
               System.out.println("dayCount: " +startdayComboBox.getItemCount());
            }else{ 
                // do nothing
            }
            break;
        default:
            break;
        }
    }//GEN-LAST:event_startmonthComboBoxActionPerformed
    
    /**
     * This will add days and remove days on 
     * based selected on end month
     */
    private void endMonthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endMonthComboBoxActionPerformed
        // TODO add your handling code here:
        
        switch((String)endMonthComboBox.getSelectedItem()){
            
        //Add day
        case "January":   case "March": 
        case "May":       case "July":   
        case "August": case "November":
            if(endDayComboBox.getItemCount() == 29){
                System.out.println("dayCount: " +endDayComboBox.getItemCount());
                endDayComboBox.addItem("29");
                //do nothing
            }
            if(endDayComboBox.getItemCount() == 30){
                System.out.println("dayCount: " +endDayComboBox.getItemCount());
                endDayComboBox.addItem("30");
                //do nothing
            }
            if(endDayComboBox.getItemCount() == 31){
                System.out.println("dayCount: " +endDayComboBox.getItemCount());
                endDayComboBox.addItem("31");
                //do nothing
            }
            
            break;
        //Remove days;    
        case "February":
            if(endDayComboBox.getItemCount() == 32){
                endDayComboBox.removeItemAt(31);
            }
            if(endDayComboBox.getItemCount() == 31){
                endDayComboBox.removeItemAt(30);
            }

            break;
            
        //Remove day 31
        case "April":   case "June":
        case "September":  case "October":
        case "December":
            
            if(endDayComboBox.getItemCount() == 32){
               endDayComboBox.removeItem("31");
               System.out.println("dayCount: " +endDayComboBox.getItemCount());
            }else{ 
                // do nothing
            }
            break;
        default:
            break;
        }
    }//GEN-LAST:event_endMonthComboBoxActionPerformed
    
    /**
     * This will change the picture at the side depending 
     * on the room type selected by the guest.
     */
    private void bedTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedTypeComboBoxActionPerformed
        // TODO add your handling code here:
        myPrefRoom = (String)bedTypeComboBox.getSelectedItem();
        
        switch(myPrefRoom){
            case "Single":
                priceLabel.setText("850");
                sidePicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/single_main_1.png")));
                break;
            case "Twin":
                priceLabel.setText("1150");
                sidePicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/twin_main.png")));
                break;
            case "Triple":
                priceLabel.setText("1370");
                sidePicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/triple_main1.png")));
                break;
            case "King":
                sidePicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/kingsize_main.png")));
                priceLabel.setText("1550");
                break;
            case "Suite":
                sidePicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/suite_main.png")));
                priceLabel.setText("2250");
                break;
            default:
                break;
        }
        
    }//GEN-LAST:event_bedTypeComboBoxActionPerformed

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged

        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x-xMouse,y-yMouse);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed

        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        GuestOptionFrame option = new GuestOptionFrame();
        option.dispFrame();
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public void displayFrame() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(preferenceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(preferenceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(preferenceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(preferenceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new preferenceFrame().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(preferenceFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    /**
     * This will check if the reservation dates are valid.
     * following must be true and valid:
     * -start year must be less than or equal to the end date
     * -start month must be less than or equal to the end month
     * -start day must be less than or equal to the end day
     * -the difference between start month and end month must be
     * at most 1.
     */
    public boolean checkReservationDate(){
        boolean isDateValid = false;
        System.out.println("Checking Reservation");
        //get the selected start date from the window
       
        startMonth = (String)startmonthComboBox.getSelectedItem();
        startDay = (String)startdayComboBox.getSelectedItem();
        startYear = (String)startYearComboBox.getSelectedItem();
        
        endMonth = (String)endMonthComboBox.getSelectedItem();
        endDay = (String)endDayComboBox.getSelectedItem();
        endYear = (String)endYearComboBox.getSelectedItem();
        
        //Checks the start date if valid
        if(startYearComboBox.getSelectedIndex() <= endYearComboBox.getSelectedIndex()){
            
            //Checks the start date if valid
            if(!"Month".equals(startMonth) && !"Day".equals(startDay) && !"Year".equals(endYear)){
                
                //Checks the End date if valid
                if(!"Month".equals(endMonth) && !"Day".equals(endDay) && !"Year".equals(endYear)){

                    //Checking the Months if valid
                    if(startmonthComboBox.getSelectedIndex() < endMonthComboBox.getSelectedIndex() ){
                        System.out.println(startmonthComboBox.getSelectedItem() +"<" +endMonthComboBox.getSelectedItem() );
                        isDateValid = true;
                        
                        //Checking the days if valid
                         if(parseInt(endDay) > parseInt(startDay)){
                            isDateValid = true;
                        }else if(parseInt(endDay) == parseInt(startDay)){
                            isDateValid = true;
                        }else{
                            JOptionPane.showMessageDialog(jPanel1, "reservation days are invalid");
                            isDateValid = false;
                        }
                         
                    }else if(startmonthComboBox.getSelectedIndex() == endMonthComboBox.getSelectedIndex() ){
                        System.out.println(startmonthComboBox.getSelectedItem() +"==" +endMonthComboBox.getSelectedItem() );

                        //Checking the days if valid
                         if(parseInt(endDay) > parseInt(startDay)){
                            isDateValid = true;
                        }else if(parseInt(endDay) == parseInt(startDay)){
                            isDateValid = true;
                        }else{
                            JOptionPane.showMessageDialog(jPanel1, "reservation days are invalid");
                            isDateValid = false;
                        }
                    }else{
                        JOptionPane.showMessageDialog(jPanel1, "End reservation date is invalid");
                        isDateValid = false;
                    }

                }else{
                    JOptionPane.showMessageDialog(jPanel1, "End reservation date is invalid");
                    isDateValid = false;
                }
            }else{
                JOptionPane.showMessageDialog(jPanel1, "Start reservation date is invalid");
                isDateValid = false;
            }
        }else{
             JOptionPane.showMessageDialog(jPanel1, "reservation Year is invalid");
             isDateValid = false;
        }
        
        //check if month difference is 0 or 1 to be valid
        System.out.println("endMonth: "+ endMonthComboBox.getSelectedIndex());
        System.out.println("startMonth: "+ startmonthComboBox.getSelectedIndex());
        if(endMonthComboBox.getSelectedIndex() - startmonthComboBox.getSelectedIndex() > 1 ){
            isDateValid = false;
            System.out.println("month dff: "+ (endMonthComboBox.getSelectedIndex() - startmonthComboBox.getSelectedIndex()));
            JOptionPane.showMessageDialog(jPanel1, "reservation days must not exceed 1 month.");
        }
        
        return isDateValid;
    }
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox bedTypeComboBox;
    private javax.swing.JLabel bedTypeLabel;
    private javax.swing.JLabel dateReserveLabel;
    private javax.swing.JComboBox endDayComboBox;
    private javax.swing.JLabel endLabel;
    private javax.swing.JComboBox endMonthComboBox;
    private javax.swing.JComboBox endYearComboBox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel logoMini;
    private javax.swing.JLabel pogressLabel;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JLabel priceRoomLabel;
    private javax.swing.JLabel priceRoomLabel2;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel sidePicLabel;
    private javax.swing.JLabel startLabel;
    private javax.swing.JComboBox startYearComboBox;
    private javax.swing.JComboBox startdayComboBox;
    private javax.swing.JComboBox startmonthComboBox;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
